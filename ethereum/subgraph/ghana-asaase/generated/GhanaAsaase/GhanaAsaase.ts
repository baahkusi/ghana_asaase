// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChangedLandOwner extends ethereum.Event {
  get params(): ChangedLandOwner__Params {
    return new ChangedLandOwner__Params(this);
  }
}

export class ChangedLandOwner__Params {
  _event: ChangedLandOwner;

  constructor(event: ChangedLandOwner) {
    this._event = event;
  }

  get landAddress(): string {
    return this._event.parameters[0].value.toString();
  }

  get oldOwner(): string {
    return this._event.parameters[1].value.toString();
  }

  get newOwner(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class NewLandOwner extends ethereum.Event {
  get params(): NewLandOwner__Params {
    return new NewLandOwner__Params(this);
  }
}

export class NewLandOwner__Params {
  _event: NewLandOwner;

  constructor(event: NewLandOwner) {
    this._event = event;
  }

  get landAddress(): string {
    return this._event.parameters[0].value.toString();
  }

  get owner(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class GhanaAsaase extends ethereum.SmartContract {
  static bind(address: Address): GhanaAsaase {
    return new GhanaAsaase("GhanaAsaase", address);
  }

  assignOwnership(landAddress: string, owner: string): boolean {
    let result = super.call(
      "assignOwnership",
      "assignOwnership(string,string):(bool)",
      [ethereum.Value.fromString(landAddress), ethereum.Value.fromString(owner)]
    );

    return result[0].toBoolean();
  }

  try_assignOwnership(
    landAddress: string,
    owner: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "assignOwnership",
      "assignOwnership(string,string):(bool)",
      [ethereum.Value.fromString(landAddress), ethereum.Value.fromString(owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  changeOwnership(landAddress: string, newOwner: string): boolean {
    let result = super.call(
      "changeOwnership",
      "changeOwnership(string,string):(bool)",
      [
        ethereum.Value.fromString(landAddress),
        ethereum.Value.fromString(newOwner)
      ]
    );

    return result[0].toBoolean();
  }

  try_changeOwnership(
    landAddress: string,
    newOwner: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "changeOwnership",
      "changeOwnership(string,string):(bool)",
      [
        ethereum.Value.fromString(landAddress),
        ethereum.Value.fromString(newOwner)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  landOwner(param0: string): string {
    let result = super.call("landOwner", "landOwner(string):(string)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toString();
  }

  try_landOwner(param0: string): ethereum.CallResult<string> {
    let result = super.tryCall("landOwner", "landOwner(string):(string)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get admin_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AssignOwnershipCall extends ethereum.Call {
  get inputs(): AssignOwnershipCall__Inputs {
    return new AssignOwnershipCall__Inputs(this);
  }

  get outputs(): AssignOwnershipCall__Outputs {
    return new AssignOwnershipCall__Outputs(this);
  }
}

export class AssignOwnershipCall__Inputs {
  _call: AssignOwnershipCall;

  constructor(call: AssignOwnershipCall) {
    this._call = call;
  }

  get landAddress(): string {
    return this._call.inputValues[0].value.toString();
  }

  get owner(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AssignOwnershipCall__Outputs {
  _call: AssignOwnershipCall;

  constructor(call: AssignOwnershipCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ChangeOwnershipCall extends ethereum.Call {
  get inputs(): ChangeOwnershipCall__Inputs {
    return new ChangeOwnershipCall__Inputs(this);
  }

  get outputs(): ChangeOwnershipCall__Outputs {
    return new ChangeOwnershipCall__Outputs(this);
  }
}

export class ChangeOwnershipCall__Inputs {
  _call: ChangeOwnershipCall;

  constructor(call: ChangeOwnershipCall) {
    this._call = call;
  }

  get landAddress(): string {
    return this._call.inputValues[0].value.toString();
  }

  get newOwner(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ChangeOwnershipCall__Outputs {
  _call: ChangeOwnershipCall;

  constructor(call: ChangeOwnershipCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
